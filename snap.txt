## Motion ##
move (10) steps
turn cw (15) degrees ## -turn-arrow
turn right (15) degrees ## -turn-arrow
turn ccw (15) degrees ## -turn-arrow
turn left (15) degrees ## -turn-arrow

point in direction (90 v)
point towards [ v]

go to x: (0) y: (0)
go to [mouse-pointer v]
glide (1) secs to x: (0) y: (0)

change x by (10)
set x to (0)
change y by (10)
set y to (0)

if on edge, bounce

(x position)
(y position)
(direction)



## Looks ##
switch to costume [costume1 v]
next costume
(costume #)

say [Hello!] for (2) secs
say [Hello!]
think [Hmm...] for (2) secs
think [Hmm...]

change [ghost v] effect by (25)
set [ghost v] effect to (0)
clear graphic effects

change size by (10)
set size to (100)%
(size)

show
hide

go to front
go back (1) layers



## Sound ##
play sound [pop v]
play sound [pop v] until done
stop all sounds

rest for (0.2) beats

play note (60 v) for (0.5) beats

change tempo by (20)
set tempo to (60) bpm
(tempo)



## Pen ##
clear

pen down
pen up

set pen color to [#f0f]
change pen color by (10)
set pen color to (0)

change pen shade by (10)
set pen shade to (50)

change pen size by (1)
set pen size to (1)

stamp



## Control ##
when gf clicked ## hat -green-flag
when green flag clicked ## hat -green-flag
when flag clicked ## hat -green-flag

when [space v] key pressed ## hat
when I am clicked ## hat
when I receive [message1 v] ## hat

broadcast [message1 v]
broadcast [message1 v] and wait

wait (1) secs
wait until <>

forever ## cstart cap
repeat (10) ## cstart
repeat until <> ## cstart  

if <> ## ifblock cstart
else ## celse
end ## cend

report []

stop block ## cap
stop script ## cap
stop all ## cap -stop-sign

run {}
launch {}
call {()}
run {} w/continuation
call {()} w/continuation

when I start as a clone ## hat
create a clone of [myself v]
delete this clone ## cap


## Sensing ##
<touching [ v]?>
<touching color [#f0f]?>
<color [#f0f] is touching [#f0f]?>

ask [What's your name?] and wait
(answer)

(mouse x)
(mouse y)
<mouse down?>

<key [space v] pressed?>

(distance to [ v])

reset timer
(timer)

([costume # v] of [Sprite1 v]

(http:// [snap.berkeley.edu])

<turbo mode?>
set turbo mode to <>



## Operators ##
(() + ())
(() - ())
(() * ())
(() / ())

(() mod ())
(round ())
([sqrt v] of (9))
(pick random (1) to (10))

<[] < []>
<[] = []>
<[] > []>

<<> and <>>
<<> or <>>
<not <>>

(join [hello ] [world])
(letter (1) of [world])
(length of [world])

(unicode of [a])
(unicode (65) as letter)

<is [5] a [number v] ?>
<is [] identical to [] ?>



## Variables ##
set [var v] to [0]
change [var v] by (1)
show variable [var v]
hide variable [var v]



## List ##
(list []) ## -multi-arg

([] in front of [-])
(item (1 v) of [-])
(all but first of [-])

(length of [-])
<[-] contains [thing]>

add [thing] to [-]

delete (1 v) of [-]
insert [thing] at (1 v) of [-]
replace item (1 v) of [-] with [thing]



## Grey ##
warp ## cstart
script variables () ## -multi-arg-one


